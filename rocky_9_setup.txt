1) add user to wheel, make wheel passwd less
sudo visudo

1) download megasync (redhat 8 pacakge) and Nautilus integration
https://mega.io/sync
sudo dnf install *.rpm

2) Enable epel repo
sudo dnf install epel-release

3) Install keepassxc
sudo dnf install keepassxc

4) log in to github
https://www.github.com/

5) Clone setup_linux repo
mkdir ~/Code
git clone https://github.com/DanBuchan/setup_linux.git

6) Install VS Code
https://code.visualstudio.com/docs/setup/linux#_rhel-fedora-and-centos-based-distributions

7) Configure git
https://help.github.com/articles/setting-your-username-in-git
git config --global user.name "Daniel Buchan"
git config --global user.email "clone@myself.com"

8) Configure git credential helper
sudo dnf install libsecret-devel git-credential-libsecret libcanberra-gtk*
git config --global --unset credential.helper
git config --global credential.helper /usr/libexec/git-core/git-credential-libsecret

9) Update OS packages
sudo dnf update
sudo dnf install dnf-plugins-core
sudo dnf config-manager --enable crb
sudo dnf update
sudo dnf groupinstall "Development Tools"
sudo dnf install ftp meson sqlite3-devel

10) Get Gnome extensions
sudo dnf install npm
sudo npm install -g linux-window-session-manager
Get these with the system install of firefox
Go to https://extensions.gnome.org
Click 'Click here to install browser extensions'
Add Frippery Panel Favourites
Add Tray Icons: Reloaded 
Add clipboard Indicator (get the right one)
Add Another Window Session Manager
Add Hide Activities Button (for Gnome 40 or 3.6+)
<<<<<<< HEAD
Add No Overview (gnome 40+)
=======
Add No overview at start-up
>>>>>>> cf4948fcaa244e6ac40d29f425a2e06c8c902b74

11) Set activites to alt-tab
Open settings -> Keyboard -> customise shortcuts

12) Gnome appearance tweaks
sudo dnf install gnome-tweaks
open gnome-tweaks (not as superuser):
Appearance -> Themes -> Applications -> Adwaita-dark
Window Titlebar -> Minimise
sudo dnf install gnome-extensions-app
Extensions -> Window list
Extensions -> Hide activities button
Extensions -> Horizontal Workspaces (now just part of window list)
Extensions -> Applications Menu

gsettings set org.gnome.settings-daemon.plugins.xsettings overrides "{'Gtk/DialogsUseHeader':<0>}"

13) install ffmpeg
sudo dnf install --nogpgcheck https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
sudo dnf install --nogpgcheck https://mirrors.rpmfusion.org/free/el/rpmfusion-free-release-9.noarch.rpm https://mirrors.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-9.noarch.rpm
sudo dnf install ffmpeg ffmpeg-devel ffmpeg-libs

14) Open Firefox and login to sync
Make appropriate firefox containers in needed
Log in to web sites mail.com, gmail, firefox, reddit, twitter, feedly
reload containers from synced settings for each site
set gb english dictionary

15) Install Chrome
wget https://dl.google.com/linux/linux_signing_key.pub
sudo rpm --import linux_signing_key.pub
wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm
sudo dnf install google-chrome-stable_current_x86_64.rpm
log in to chrome account
log in to work outlook
and show bookmarks bar in settings

16) Make useful dirs
# mkdir Applications
# mkdir Code
# mkdir Projects
# mkdir Course_dev

17) install snap and acroread
https://snapcraft.io/docs/installing-snap-on-rocky
snap install acrordrdc

18) Install development libs for system Python Dev
sudo dnf install python3-devel
sudo pip3 install virtualenv
sudo pip3 install virtualenvwrapper
mkdir ~/virtualenvs

add to .bashrc
export WORKON_HOME=$HOME/virtualenvs
export PROJECT_HOME=$HOME/Code
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
source virtualenvwrapper.sh

19) Install dev libs for PSIPRED server
sudo dnf install redis gnuplot ghostscript glibc.i686 gd gd-devel ruby ruby-devel ansible
sudo dnf install postgresql postgresql-devel postgresql-server
sudo dnf install inkscape gimp gv httpd httpd-devel cpan
sudo dnf install boost boost-devel lapack lapack-devel cmake

sudo cpan install Expect
  May require force on some systems
sudo cpan install GD

20) Install openjdk
sudo dnf install java-latest-openjdk java-latest-openjdk-devel

21) R/Rstudio Setup
Note that epel crb must be enabled at this point
sudo dnf install R readline-devel
https://www.rstudio.com/products/rstudio/download/#download
sudo dnf install rstudio*.rpm

22) Install Franz
https://meetfranz.com/
Move appimage to /Applications/Franz
wget https://meetfranz.com/static/franz-logo.svg
make a new application entry in /usr/share/applications/franz.desktop

23) Install OpenVPN client
https://tsg.cs.ucl.ac.uk/working-from-home/#openvpn
sudo dnfinstall openvpn NetworkManager-openvpn NetworkManager-openvpn-gnome
Open Gnome settings -> "Network" -> "+" -> "Import from file..."
Add the .ovpn from the above tarball and configure

24) Add some .bashrc things
remeber to swap PASSWD, also doublecheck --servercert
PS1="\[\e[0;32m\]\u\[\e[m\]@\[\e[1;34m\]\h\[\e[m\]:\w\$ ";
export PS1;
alias ls="ls --color=always";
alias z="ls --color=always -lah";
#alias lrm="'find . | xargs rm'"
alias duall="du -sch .[!.]* * | sort -h";
alias vi="vim";
alias sshk="ssh knuckles.cs.ucl.ac.uk"

25) Get core PSIPRED Server development packages
To begin with I only get PSIPRED, I only need to get the other algorithms
if I need to work on them
git clone https://github.com/psipred/psipred_website.git
git clone https://github.com/psipred/blast_cache.git
git clone https://github.com/psipred/psipred_javascript.git
git clone https://github.com/psipred/server_update.git
git clone https://github.com/psipred/ansible_config.git
git clone https://github.com/psipred/ansible_production_config.git
git clone https://github.com/psipred/biod3.git
git clone https://github.com/psipred/psipred_branding.git
git clone https://github.com/psipred/psipred.git
git clone https://github.com/AnalyticsAutomated/commandRunner.git
git clone https://github.com/AnalyticsAutomated/analytics_automated.git

26) Make some local virtualenvs
# mkvirtualenv analytics_automated; deactivate
# mkvirtualenv psipred_website; deactivate
# mkvirtualenv blast_cache; deactivate
and any for any live projects

27) https://serverfault.com/questions/699307/how-to-grant-access-to-var-run-to-postgres-on-centos
sudo chmod +x /etc/rc.d/rc.local
add to rc.local:
chmod uog+rw /var/run/postgresql/
edit /usr/lib/tmpfiles.d/postgresql.conf:
set permission to 0777

28) add some useful Software
sudo dnf install vlc

29) Open the Software dialogue
install libreoffice apps or:
sudo dnf install libreoffice-writer libreoffice-base libreoffice-impress libreoffice-draw libreoffice-math

30) Install Better fonts
https://rubjo.github.io/victor-mono/
unpack to ~/.fonts
fc-cache -fv
fc-cache-64 -fv
sudo fc-cache -fv
sudo fc-cache-64 -fv

31) configure VS Code
enable sync and log in with github credentials

32) Mount backup drive
https://www.howtoforge.com/tutorial/mount-ntfs-centos/
dnf install ntfs-3g
sudo mkdir /mnt/backup
sudo mount -t ntfs-3g /dev/sdb5 /mnt/backup/

33) install ssh server
dnf install openssh-server
systemctl start sshd
systemctl enable sshd
firewall-cmd --zone=public --permanent --add-service=ssh
firewall-cmd --reload

33) Install OBS and kdenlive via flathub
sudo dnf install https://pkgs.dyn.su/el8/base/x86_64/raven-release-1.0-2.el8.noarch.rpm
sudo dnf install raven-release
sudo dnf --enablerepo=raven-multimedia install dvgrab
sudo dnf install flatpak kdenlive
sudo flatpak install flathub com.obsproject.Studio
# Might have to install flathub

35) Add jabref
https://www.jabref.org/
sudo dnf install jabref-5.3-1.x86_64.rpm
in bash.rc
alias jabref="/opt/jabref/bin/JabRef"

36) Install CUDA and nvidia drivers from nvidia's enablerepo
https://developer.nvidia.com/cuda-downloads?target_os=Linux&target_arch=x86_64&Distribution=Rocky&target_version=8&target_type=rpm_local

37) Printer @ UCL
dnf install samba samba-client
Get driver from
https://www.ucl.ac.uk/isd/how-to/connecting-to-printucl-using-linux
Then go to http://localhost:631
Administration -> Add Printer -> Windows Printer via Samba

Then on the commandline
systemctl stop cups
edit /etc/cups/printers.conf

Edit/add:
AuthInfoRequired username,password
systemctl restart cups

Now if you print from firefox/chrome it should ask for a user/password (don't forget ad/) the first time
(auth is UCL email address and passwd)

UCL authentication is now
'ad.ucl.ac.uk\ucbcdwb' and password

38) Get Teams
Now install as a Progressive Web App or Chrome App.
Log in and press the button on your browsers

39) Configure postgres
(ensure postgres can write /var/run/postgres)
initdb -D /home/dbuchan/Databases/postgres_13_db/
you can now log in with `psql postgres`

39) Install gnome pomodoro
sudo dnf install gdk-pixbuf2-devel gobject-introspection-devel vala gtk3-devel libpeas-devel gstreamer1-devel libcanberra-devel json-glib-devel 
https://gnomepomodoro.org/
needs gom (which can be installed with the same gom commands)
https://gitlab.gnome.org/GNOME/gom

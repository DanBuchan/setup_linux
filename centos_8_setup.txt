Installtion Notes:

# I started with a very minimal Centos 8 Install. I think I only selected
# GNOME as the set of packages in the installer. Selecting too many led
# to the nouveau drivers not working once the install was complete. So
# clearly some packages don't play nice on the installation media.
#
# The UCL CS VPN would not work if I installed it too early (and the error was
# uninformative, possibly some Java thing). So clearly some package that installs
# before it is needed
#
# On login I have changed my desktop to Classic (X11 Server) rather than
# using Wayland. YMMV

1. Update OS
# dnf update
# dnf config-manager --set-enabled PowerTools
# dnf groupinstall "Development Tools"
# reboot

2. Gnome settings and tweak tools for 4k
# xset m 16 1
# dnf install gnome-tweaks
Global Dark Theme On
Fonts scaling 1.5

3. Setup git
https://help.github.com/articles/setting-your-username-in-git
# git config --global user.name "Daniel Buchan"
# git config --global user.email "clone@myself.com"

4. Set gnome-keyring to save git credentials
# dnf install libsecret-devel
# git config --global --unset credential.helper
# git config --global credential.helper /usr/libexec/git-core/git-credential-libsecret

5. Get this repo, so you can read it in Atom rather than in vi
# cd ~/Code
# git clone https://github.com/DanBuchan/setup_centos_8.git

6. Install atom
# dnf install lsb-core-noarch
# dnf install libXScrnSaver
# pip3 install pycodestyle
# rpm -Uvh atom.x86_64.rpm
 set sync-settings plugin
  Access: SEE GITHUB DEVELOPER SETTINGS
  GIST ID; 3c7678b1c60c348f0266567e44dad0fa
# set pycodestyle path in Linter prefs

7. Enable EPEL
# dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm

8. Install keepass
# dnf install keepassxc

9. Install MEGASync
Get rpm from https://mega.nz/sync

10. Install ffmpeg (to allow h264 playback in firefox)
https://computingforgeeks.com/how-to-install-ffmpeg-on-centos-rhel-8/
# dnf localinstall --nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-8.noarch.rpm
# dnf install --nogpgcheck https://download1.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-8.noarch.rpm
# dnf install http://rpmfind.net/linux/epel/7/x86_64/Packages/s/SDL2-2.0.10-1.el7.x86_64.rpm
# dnf install ffmpeg ffmpeg-devel ffmpeg-libs

11. Get Gnome extensions
Get these with the system install of firefox
Go to https://extensions.gnome.org
Click 'Click here to install browser extensions'
Add Frippery Panel Favourites
Add TopIcons Plus Git
Add clipboard Indicator
# npm install -g linux-window-session-manager
Add Window Session Manager

12. Install Firefox
Go to https://www.mozilla.org/en-GB/firefox/download/thanks/
# mv Downloads/firefox-72.0.2.tar.bz2 Applications/
# cd Applications
# bunzip2 firefox-72.0.2.tar.bz2
# tar -xvf firefox-72.0.2.tar
# Update or add /usr/share/applications/firefox.desktop
Exec is now /home/dbuchan/Applications/firefox/firefox
Icon is /home/dbuchan/Applications/firefox/browser/chrome/icons/default/default128.png
# chattr +i /usr/share/applications/firefox.desktop

13. Open Firefox and login to sync
# Make appropriate firefox containers
# Log in to web sites mail.com, gmail, firefox, reddit, gwj, github, twitter, work outlook, fb, feedly
# log in to learn.gold.ac.uk, https://goldmine.gold.ac.uk/, https://agresso.gscams.gold.ac.uk/a
# configure containers for each site

14. Install google-chrome
See centos8 instructions at
https://www.if-not-true-then-false.com/2010/install-google-chrome-with-yum-on-fedora-red-hat-rhel/

15. Make useful dirs
# chmod uo+rw /scratch
# mkdir /scratch/Applications
# mkdir /scratch/Code
# mkdir /scratch/Projects
# mkdir /Course_dev
# cd /home/dbuchan
# ln -s /scratch/Applications Applications
# ln -s /scratch/Code Code
# ln -s /scratch/Projects Projects

16. get thunderbird
# dnf install thunderbird
Thunderbird OWL plugin allows MS-365 exchange support pretty transparently

17. Install development libs for Python Dev
# dnf install python36-devel
# pip3 install virtualenv
# pip3 install virtualenvwrapper
# mkdir /scratch/virtualenvs

Add to .bashrc
export WORKON_HOME=$HOME/scratch/virtualenvs
export PROJECT_HOME=$HOME/Code
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
source virtualenvwrapper.sh

18. Install dev libs for PSIPRED server
# dnf install redis
# dnf install gnuplot
# dnf install ghostscript
# dnf install glibc.i686
# cpan install Expect
  May require force on some systems
# dnf install gd, gd-devel
# cpan install GD
# dnf install postgresql postgresql-devel postgresql-server postgresql-server-devel
# dnf install inkscape gimp gv
# dnf install httpd httpd-devel

19. Install openjdk
# dnf install java-latest-openjdk java-latest-openjdk-devel

20. R/Rstudio Setup
Note that epel Powertools must be enabled at this point
# dnf install R
# dnf install readline-devel
get free https://www.rstudio.com/products/rstudio/download/
# wget https://download1.rstudio.org/desktop/fedora28/x86_64/rstudio-1.2.5033-x86_64.rpm
# rpm -Uvh rstudio-1.2.5033-x86_64.rpm

21. Install Ferdi
https://getferdi.com/download
see github releases for tarball
# wget https://github.com/getferdi/ferdi/releases/download/v5.5.0/ferdi-5.5.0.x86_64.rpm
# rpm -Uvh ferdi-5.5.0.x86_64.rpm

22. Install connectTunnel for CS dept VPN
https://tsg.cs.ucl.ac.uk/cs-vpn-cs-wall/
Follow "working from home" instructions
# added and alias to my bashrc script
alias startct="startct -m console -s cswall.cs.ucl.ac.uk"

23. Add some .bashrc things
PS1="\[\e[0;32m\]\u\[\e[m\]@\[\e[1;34m\]\h\[\e[m\]:\w\$ ";
export PS1;

alias ls="ls --color=always";
alias z="ls --color=always -lah";
#alias lrm="'find . | xargs rm'"
alias duall="du -sch .[!.]* * | sort -h";
alias vi="vim";
alias sshk="ssh knuckles.cs.ucl.ac.uk"
alias startct="/bin/startct -m console -u dbuchan -p 303to909 -d cswall.cs.ucl.ac.uk";

24. Log in to wayland to use the application search to set favourites or set via
# gsettings get org.gnome.shell favorite-apps

25. Update nouveau drivers to Nvidia
I followed instructions at this guide (only points 8 through 11)
https://sethgoldin.github.io/install-davinci-resolve-centos

26. Get core PSIPRED Server development packages
To begin with I only get PSIPRED, I only need to get the other algorithms
if I need to work on them
# git clone https://github.com/psipred/psipred_website.git
# git clone https://github.com/psipred/blast_cache.git
# git clone https://github.com/psipred/psipred_javascript.git
# git clone https://github.com/psipred/server_update.git
# git clone https://github.com/psipred/ansible_config.git
# git clone https://github.com/psipred/ansible_production_config.git
# git clone https://github.com/psipred/biod3.git
# git clone https://github.com/psipred/psipred_branding.git
# git clone https://github.com/psipred/psipred.git
# git clone https://github.com/AnalyticsAutomated/commandRunner.git
# git clone https://github.com/AnalyticsAutomated/analytics_automated.git

27. Make some local virtualenvs
# mkvirtualenv analytics_automated; deactivate
# mkvirtualenv psipred_website; deactivate
# mkvirtualenv blast_cache; deactivate
# mkvirtualenv advanced_web_dev; deactivate

28. https://serverfault.com/questions/699307/how-to-grant-access-to-var-run-to-postgres-on-centos
# sudo chmod +x /etc/rc.d/rc.local
add to rc.local
chmod uog+rw /var/run/postgresql/
edit /usr/lib/tmpfiles.d/postgresql.conf
set permission to 0777

29. Install analytics automated
see doc/dev_installation.rst
# workon analytics_automated
# mkdir /scratch/postgres_databases

30. Install Psipred website
# workon psipred_website
# cd psipred_website
# pip install -r requirements/
Follow README instructions for intial setup

31. Install blast cache
# workon blast_cache

32. install npm stuff for psipred_javascript
# follow the notes in the README

33. Configure both ansible installs
follow comments in the staging ansible_set_up.sh

33. Install global pip packages
# pip3 install numpy scipy torch

34. Open the Software dialogue
Install flatpak https://flatpak.org/setup/CentOS/
Install flathub VLC, libreoffice

35. Install OBS
dnf install obs-studio
https://mkvtoolnix.download/downloads.html
# sudo rpm -Uhv https://mkvtoolnix.download/centos/bunkus-org-repo-2-3.noarch.rpm
# sudo yum install mkvtoolnix

36. Install nux
# rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro

36. Install Better fonts
https://rubjo.github.io/victor-mono/
unpack to ~/.fonts
# sudo fc-cache -fv
# sudo fc-cache-64 -fv
# dnf inst

### DISABLING NOUVEAU

I only got this to work once I used the modprobe blacklist and dracut method. Though I have also written grub.cfg to /boot/grub and /boot/efi/EFI/centos and I edit the DEFAUL linux_cmd

### TODO

23. Jabref?

32. Add pomodoro
Down load source from https://gnomepomodoro.org/#download
# dnf install autoconf-archive libappstream-glib-devel gobject-introspection-devel vala vala-devel gtk3-devel
# dnf install glib2-devel gtk3-devel gobject-introspection-devel libpeas-devel
